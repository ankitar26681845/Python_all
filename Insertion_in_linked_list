class Node:
    def __init__(self,data):
        self.data =data
        self.next = None
class Linked_list:
    def __init__(self):
        self.head = None
    def append(self,data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        current = self.head
        while current.next:
            current = current.next
        current.next =new_node
    def print1(self):
        current = self.head
        while current:
            print(current.data,end="->")
            current = current.next
    def insertAtBeginning(self,data):
        new_node =Node(data)
        new_node.next = self.head
        self.head = new_node

    def insertAtMiddle(self,data):
        while self.head is None:
            self.head = Node(data)
            return
        slow = self.head
        fast = self.head
        while fast.next and fast.next.next:
            fast = fast.next.next
            slow = slow.next
            new_node = Node(data)
            new_node.next = slow.next
            slow.next = new_node




l = Linked_list()
l.append(4)
l.append(1)
l.append(2)
l.insertAtBeginning(8)
l.insertAtMiddle(5)
l.print1()
